<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ include file="$(ProjectDir)T4\TemplateMethod.t4" #>
<#@ output extension=".cs" #>
using System;
using System.Collections.Generic;
using StageMapEditor.ViewModels;

namespace StageMapEditor.Models
{
	public partial class StageModel
	{
<# foreach(var item in StageModel) { #>
        <#= item.Type.Name #> _<#= item.Name #>;
        public <#= item.Type.Name #> <#= item.Name #>
        {
            get
            { return _<#= item.Name #>; }
            set
            {
                if (_<#= item.Name #> == value)
                    return;
                _<#= item.Name #> = value;
                RaisePropertyChanged("<#= item.Name #>");
            }
        }

<# } #>

        public void UpdateFromInput(EditStageViewModel editStageViewModel)
        {
<# foreach(var item in StageModel) { #>
			<#= item.Name #> = <#= item.Conv("editStageViewModel.Input") #>;
<# } #>         
        }

        private void SetProperties(EditStageViewModel inputViewModel)
        {
<# foreach(var item in StageModel) { #>
<# if(item.Type.Name.ToLower() == "string") { #>
			this.<#= item.Name #> = inputViewModel.Input<#= item.Name #>;
<# } else { #>
			this.<#= item.Name #> = <#= item.Type.FullName #>.Parse(inputViewModel.Input<#= item.Name #>);
<# } #>
<# } #>
        }

        private void SetProperties(StageModelPack stageModelPack)
        {
<# foreach(var item in StageModel) { #>
			this.<#= item.Name #> = stageModelPack.<#= item.Name #>;
<# } #>
        }
	}
}
